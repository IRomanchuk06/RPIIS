# Расчетная работа 


## Введение

### Цель

Изучить основы теории графов, определить число вершинной связности графа

### Задание

Реализовать на C++ код, который может определить число вершинной связности в графе

Графы представляются в виде матрицы инцидентности.

Поскольку по условию не сказано какой должен быть формат вывода, будет считаться, что это должна быть изоморфная подстановка.

Результат работы программы будет выводится в файл с префиксом `_exit`.

### Ключевые понятия

`Граф` - математическая абстракция реальной системы любой природы, объекты которой обладают парными связями. 

Два графа называются `изоморфными`, если у них одинаковое число вершин (обозначим его n) и вершины каждого из них можно занумеровать так числами от 1 до n, что в первом графе две вершины соединены ребром тогда и только тогда, когда вершины с такими же номерами во втором графе соединены.

`Подграф` - это часть графа, в которой мы берем некоторые его вершины и ребра. Другими словами, граф `H` является подграфом графа `G`, если вершины и ребра `H` являются подмножеством вершин и ребер `G`.

Графы, в которых все ребра являются звеньями, то есть порядок двух концов ребра графа не существенен, называются `неориентированными`. 

`Список смежности` - один из способов представления графа в виде коллекции списков вершин. Каждой вершине графа соответствует список, состоящий из «соседей» этой вершины.

`Матрица смежности` - это вид представления графа в виде матрицы, когда пересечение столбцов и строк задаёт дуги. Используя матрицу смежности, можно задать вес дуг и ориентацию. Каждая строка и столбец матрицы соответствуют вершинам, номер строки соответствует вершине, из которой выходит дуга, а номер столбца - в какую входит дуга.

`Изоморфная подстановка` - это понятие, используемое в теории графов, которое описывает биективное отображение между вершинами двух графов, сохраняющее связи между вершинами исходного графа.

## Идея решения
