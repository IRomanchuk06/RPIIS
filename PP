# Расчётная работа

### Цель

Изучить основы теории графов

### Задание

Реализовать код на выбранном языке программирования, который находит индекс компонент относительно простой цепи в неориентированном графе, хранить граф в виде матрицы инцидентности.

### Ключевые понятия

`Граф` — математическая абстракция реальной системы любой природы, объекты которой обладают парными связями.

`Неориентированный граф` —  это математическая структура, представляющая собой набор вершин и рёбер, где рёбра не имеют направления.

`Простая цепь` - маршрут без повторяющихся вершин (откуда следует, что в простой цепи нет повторяющихся рёбер).

`Индекс компонент` - это число, которое используется для идентификации компоненты связности в графе. 

`Компонента связности` - это группа вершин в графе, которые соединены друг с другом ребрами.

`Матрица инцидентности` — одна из форм представления графа, в которой указываются связи между инцидентными элементами графа (ребро (дуга) и вершина). 

# Алгоритм решения

* перебираем все вершины графа в качестве начальных вершин для поиска максимальной длины простого пути.
*  перебираем все рёбра, связанные с текущей вершиной. Если ребро начинается в текущей вершине (т.е., значение в матрице инцидентности равно 1), то ищутся соседние вершины, на которые указывает данное ребро, и если они еще не посещены, то добавляются в очередь для дальнейшего исследования. Таким образом, поиск в ширину продолжается.
*  После завершения поиска в ширину для текущей начальной вершины, обновляется значение максимвльной длины, если текущая длина пути больше текущего максимума.


### Вывод

В результате выполнения данной работы были получены следующие практические навыки:

- изучены основы теории графов

- изучены способы представления графов

- изучены базовые алгоритмы для работы с графами
