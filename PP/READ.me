Напишите код, который определяет, является ли данный граф дерева неориентированным или нет

```c++
#include <iostream>
#include <vector>

using namespace std;

bool isCyclicUtil(vector<vector<int>>& graph, int v, vector<bool>& visited, int parent) {
    visited[v] = true;

    for (int i = 0; i < graph[v].size(); i++) {
        if (graph[v][i] == 1) {
            if (!visited[i]) {
                if (isCyclicUtil(graph, i, visited, v))
                    return true;
            }
            else if (i != parent)
                return true;
        }
    }

    return false;
}

bool isTree(vector<vector<int>>& graph) {
    int V = graph.size();
   vector<bool> visited(V, false);

    if (isCyclicUtil(graph, 0, visited, -1))
        return false;

    for (int i = 0; i < V; i++) {
        if (!visited[i])
            return false;
    }

    return true;
}

int main() {
    system("chcp 1251");
    int V;
    cout << "Enter the number of vertices in the graph: ";
    cin >> V;

    vector<vector<int>> graph(V, vector<int>(V, 0));

    cout << "Input Graph Adjacency Matrix:\n";
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            cin >> graph[i][j];
        }
    }

    if (isTree(graph))
        cout << "The graph is an non oriented tree\n";
    else
        cout << "The graph is not an non oriented tree\n";

    return 0;
}
```


Попробуем на произвольном графике

[![Screenshot-2023-12-20-093249.png](https://i.postimg.cc/t4yH1CxD/Screenshot-2023-12-20-093249.png)](https://postimg.cc/9rxkK21q)


[![Screenshot-2023-12-20-093304.png](https://i.postimg.cc/NjY5gtfv/Screenshot-2023-12-20-093304.png)](https://postimg.cc/BXYqgdKm)


